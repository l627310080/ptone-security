<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ptone.modules.sys.dao.SysUserDao">

	<select id="getList" resultType="com.ptone.modules.sys.entity.SysUserEntity">
		select t1.*, (select t2.name from sys_dept t2 where t2.id=t1.dept_id) deptName from sys_user t1
		where t1.super_admin = 0
		<if test="username != null and username.trim() != ''">
			and t1.username like #{username}
		</if>
		<if test="deptId != null and deptId.trim() != ''">
			and t1.dept_id = #{deptId}
		</if>
		<if test="gender != null and gender.trim() != ''">
			and t1.gender = #{gender}
		</if>
		<if test="deptIdList != null">
			and t1.dept_id in
			<foreach item="id" collection="deptIdList" open="(" separator="," close=")">
				#{id}
			</foreach>
		</if>
	</select>

	<select id="getById" resultType="com.ptone.modules.sys.entity.SysUserEntity">
		select t1.*, (select t2.name from sys_dept t2 where t2.id=t1.dept_id) deptName from sys_user t1
			where t1.id = #{value}
	</select>

	<select id="getByUsername" resultType="com.ptone.modules.sys.entity.SysUserEntity">
		select * from sys_user where username = #{value}
	</select>

	<update id="updatePassword">
		update sys_user set password = #{newPassword} where id = #{id}
	</update>

	<select id="getCountByDeptId" resultType="int">
		select count(*) from sys_user where dept_id = #{value}
	</select>

	<select id="getUserIdListByDeptId" resultType="Long">
		select id from sys_user where dept_id in
		<foreach item="deptId" collection="list" open="(" separator="," close=")">
			#{deptId}
		</foreach>
	</select>

	<select id="recursiveGetPageListByDeptId" resultType="com.ptone.modules.sys.entity.SysUserEntity">
		select t1.*, (select t2.name from sys_dept t2 where t2.id=t1.dept_id) deptName from sys_user t1
		inner join sys_dept tb_dept on t1.dept_id = tb_dept.id
		<!--where t1.super_admin = 0
        <if test="username != null and username.trim() != ''">-->
		<!--and t1.username like #{username}-->
		<!--</if>-->
		<!--<if test="realname != null and realname.trim() != ''">-->
		<!--and t1.real_name like #{realname}-->
		<!--</if>-->
		<!--<if test="deptId != null and deptId.trim() != ''">-->
		<!--and (tb_dept.id =cast(#{deptId} as SIGNED) or  tb_dept.pids like concat(concat('%',#{deptId}),'%'))-->
		<!--</if>-->
		<!--<if test="deptIdList != null">-->
		<!--and t1.dept_id in-->
		<!--<foreach item="id" collection="deptIdList" open="(" separator="," close=")">-->
		<!--#{id}-->
		<!--</foreach>-->
		<!--</if>-->
		<where>

			${ew.sqlSegment}
		</where>
		order by tb_dept.sort,t1.sort
	</select>

	<select id="getUserNameListByDeptId" resultType="String">
		select username from sys_user where dept_id in
		<foreach item="deptId" collection="list" open="(" separator="," close=")">
			#{deptId}
		</foreach>
	</select>

	<select id="getRoleList" resultType="com.ptone.modules.sys.dto.SysUserDTO">
       SELECT
            a.*
        FROM
            sys_user a
            LEFT JOIN sys_role_user b ON a.id = b.user_id
        WHERE
            b.role_id LIKE #{roleid}
    </select>

	<select id="getListByRoleId" resultType="com.ptone.modules.sys.entity.SysUserEntity">
        select sys_user.* from sys_role_user
        inner JOIN sys_user on sys_role_user.user_id = sys_user.id
        where sys_role_user.role_id = #{value}
	</select>
</mapper>